# PipelineTemplates/.github/workflows/build.yml
name: Reusable Build & Release (Windows)

on:
  workflow_call:
    inputs:
      dotnet_version:
        description: 'Version of .NET SDK to use'
        required: false
        default: '9.0.x'
        type: string
    secrets:
      PAT_TOKEN:
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    - name: Get version from git
      id: version
      shell: pwsh
      run: |
        if ($env:GITHUB_REF -like 'refs/tags/*') {
          $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
        } else {
          $lastTag = (git describe --tags --abbrev=0) -replace '^v', ''
          $version = "$lastTag.$env:GITHUB_RUN_NUMBER"
        }
        echo "VERSION=$version" >> $env:GITHUB_ENV
        Write-Host "Version: $version"

    - name: Set version in all csproj
      shell: pwsh
      run: |
        Get-ChildItem -Recurse -Filter *.csproj | ForEach-Object {
          (Get-Content $_.FullName) `
            -replace '<Version>.*</Version>', "<Version>$env:VERSION</Version>" `
            | Set-Content $_.FullName
        }

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Publish
      run: dotnet publish --configuration Release --no-build -o ./publish

    - name: Upload Artifact to Actions
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.event.repository.name }}-${{ env.VERSION }}
        path: ./publish

    - name: Zip Publish Folder
      if: startsWith(github.ref, 'refs/tags/')
      run: powershell Compress-Archive -Path ./publish/* -DestinationPath "./${{ github.event.repository.name }}-${{ env.VERSION }}.zip"

    - name: Upload zipped Artifact to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: ./${{ github.event.repository.name }}-${{ env.VERSION }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

    - name: Push NuGets to Packages
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        $packages = Get-ChildItem -Path . -Recurse -Filter *.nupkg
        if ($packages.Count -gt 0) {
          dotnet nuget push "**/*.nupkg" `
            --api-key ${{ secrets.PAT_TOKEN }} `
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
        }
        else {
          Write-Host "No NuGet-Packages were found â€“ Step will be ignored."
        }
      shell: pwsh
